#include "imports/stdlib.fc";

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    slice ds = get_data().begin_parse();
    int total = ds~load_uint(64);
    int n = in_msg_body~load_uint(32);
    total += n;
    set_data(begin_cell().store_uint(total, 64).end_cell());
}

(int) get_total() method_id {
    slice ds = get_data().begin_parse();
    int total = ds~load_uint();
    return total;
}

(int) add(int a, int b){
    {-
        this is a function which takes 2 args a and b of type
        int and return their sum
    -}
    return a + b; ;; + is the addition operator.
}

() f(int i, cell c, slice s, builder b, cont c, tuple t) {
    ;; cont -> continuation is another flavor of cell. 
    ;; It contains ready-to-execute TVM byte-code. 

    ;; tuple: is an ordered collection of up to 255 components
    ;; having arbitrary vlaue `types` (A, B, ...) is an ordered collection
    ;; ready for mass assigning `like` (int, int ) = (24, 54)

    ;; () -> show that the function doesn't return any value 
}